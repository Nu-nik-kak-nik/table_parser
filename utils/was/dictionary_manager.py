import json
from typing import Dict, List, Any


class DictionaryManager:
    @staticmethod
    def load_json(filepath: str) -> Dict:
        try:
            with open(filepath, 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            return {}

    @staticmethod
    def save_json(data: Dict, filepath: str):
        with open(filepath, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)

    @staticmethod
    def create_product_keywords(product: Dict) -> List[str]:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–∞"""
        keywords = []

        # –ë–∞–∑–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
        keywords.extend([
            product.get('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '').lower(),
            product.get('–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å', '').lower(),
            product.get('–ú–æ–¥–µ–ª—å', '').lower(),
            product.get('–¶–≤–µ—Ç', '').lower(),
        ])

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        memory = product.get('–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø–∞–º—è—Ç—å', '')
        if memory:
            keywords.extend([
                memory,
                f"{memory}gb",
                f"{memory} gb"
            ])

        # –≠–º–æ–¥–∑–∏ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è
        if 'Apple' in product.get('–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å', ''):
            keywords.append('üçè')

        return list(set(keywords))
